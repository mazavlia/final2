#services:
#  postgres:
#    container_name: postgres
#    networks:
#      - db
#    image: postgres:13
#    hostname: localhost
#    ports:
#      - 5435:5432
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_HOST: ${POSTGRES_HOST}
#      POSTGRES_PORT: ${POSTGRES_PORT}
#    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#      - postgres-db-volume:/var/lib/postgresql/data
services:
  postgres:
    container_name: postgres
    networks:
      - db
    image: postgres:13
#    hostname: localhost
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      retries: 10
    restart: always

  python:
    container_name: python
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - db

networks:
  db:
    driver: bridge

volumes:
  postgres-db-volume:

